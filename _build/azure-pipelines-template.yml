
  
jobs:
- job: ${{ parameters.name }}
  pool:
    vmImage: ${{ parameters.vmImage }}
  strategy:
    matrix:
      stable:
        rustup_toolchain: stable
      beta:
        rustup_toolchain: beta
      nightly:
        rustup_toolchain: nightly
  steps:
  - ${{ if ne(parameters.name, 'Windows') }}:
    # Linux and macOS.
    - script: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
        echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
      displayName: Install rust
  - ${{ if eq(parameters.name, 'Windows') }}:
    # Windows.
    - script: |
        curl -sSf -o rustup-init.exe https://win.rustup.rs
        rustup-init.exe -y --default-toolchain %RUSTUP_TOOLCHAIN%
        set PATH=%PATH%;%USERPROFILE%\.cargo\bin
        echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
      displayName: Install rust (windows)
  # All platforms.
  - script: |
        rustc -Vv
        cargo -V
  - script: rustup component add rustfmt
    displayName: Install Rustfmt 
  - script: cargo fmt --all -- --check
    displayName: Run Rustfmt 
  - script: rustup component add clippy
    displayName: Install Clippy
    condition: ne( parameters['rustup_toolchain'], 'nightly' )
  - script: cargo clippy --all
    displayName: Run clippy
    condition: ne( parameters['rustup_toolchain'], 'nightly' )      
  